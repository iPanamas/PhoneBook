{"version":3,"file":"static/js/327.cabf23f8.chunk.js","mappings":"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","sources":["animation/animationPage.js","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/ContactForm.jsx","redux/contacts/contactSelectors.js","Hooks/useContacts.js","components/Contact/ContactFilter.jsx","Hooks/useVisibleItem.js","animation/animationSettings.js","components/Contact/ContactItem.jsx","components/Contact/ContactList.jsx","components/Contact/ContactTitle.jsx","pages/ContactsPage.jsx"],"sourcesContent":["const pageVariants = {\n  initial: {\n    opacity: 0,\n    x: '-100vw',\n    scale: 0.5,\n  },\n  in: {\n    opacity: 1,\n    x: 0,\n    scale: 1,\n  },\n  out: {\n    opacity: 0,\n    x: '100vw',\n    scale: 1.2,\n  },\n};\n\nconst pageTransition = {\n  type: 'tween',\n  ease: 'anticipate',\n  duration: 1,\n};\n\nconst animationPage = {\n  pageVariants,\n  pageTransition,\n};\n\nexport default animationPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"phoneBook\":\"Contact_phoneBook__50sUl\",\"phoneBookTitle\":\"Contact_phoneBookTitle__TKEQ7\",\"contactsTitle\":\"Contact_contactsTitle__UBpL9\",\"phoneBookForm\":\"Contact_phoneBookForm__GeUym\",\"phoneBookLabel\":\"Contact_phoneBookLabel__AMv6J\",\"phoneBookInput\":\"Contact_phoneBookInput__VJtwS\",\"phoneBookButton\":\"Contact_phoneBookButton__lq3iA\",\"findContactLabel\":\"Contact_findContactLabel__RJKkD\",\"findContactInput\":\"Contact_findContactInput__ZbX+j\",\"contactList\":\"Contact_contactList__ZHM49\",\"contactList__item\":\"Contact_contactList__item__6bM-C\",\"contactList__text\":\"Contact_contactList__text__w3zvp\",\"contactList__button\":\"Contact_contactList__button__sB-3K\"};","// Formik\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n// Hooks\nimport { useMemo } from 'react';\n// RTK Query hooks\nimport {\n  useFetchContactsQuery,\n  useAddContactMutation,\n} from 'services/phoneBook';\n// Toast notify\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// Loader\nimport { Loader } from 'components/Loader/Loader';\n// Styles\nimport s from './Contact.module.css';\n\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  number: Yup.string()\n    .required('This field is Required')\n    .matches(\n      /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/,\n      'Phone number is not valid'\n    ),\n});\n\nconst ContactForm = () => {\n  const { data: contacts } = useFetchContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n    onSubmit: async ({ name, number }, { resetForm }) => {\n      resetForm();\n      try {\n        if (alreadyInContacts) {\n          return toast.warn(`${name} is already in 📱`);\n        } else {\n          await addContact({ name, number });\n          return toast.success(`${name} added in your 📱`);\n        }\n      } catch (error) {\n        console.log(error);\n        return toast.error('Ooops..., something went wrong, try again later');\n      }\n    },\n    validationSchema: schema,\n  });\n\n  const { name } = formik.values;\n\n  const alreadyInContacts = useMemo(() => {\n    return contacts?.find(contact => contact.name === name);\n  }, [contacts, name]);\n\n  return (\n    <form className={s.phoneBookForm} onSubmit={formik.handleSubmit}>\n      <label className={s.phoneBookLabel}>\n        <input\n          className={s.phoneBookInput}\n          name=\"name\"\n          onChange={formik.handleChange}\n          value={formik.values.name}\n          type=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Name\"\n        />\n      </label>\n      <label className={s.phoneBookLabel}>\n        <input\n          className={s.phoneBookInput}\n          name=\"number\"\n          onChange={formik.handleChange}\n          value={formik.values.number}\n          type=\"tel\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Number\"\n        />\n      </label>\n      <button className={s.phoneBookButton} type=\"submit\">\n        {isLoading ? <Loader /> : 'Add contact'}\n      </button>\n    </form>\n  );\n};\nexport default ContactForm;\n","const getFilter = state => state.filter.value;\n\nconst contactSelectors = {\n  getFilter,\n};\n\nexport default contactSelectors;\n","// Hooks\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n// Redux selectors\nimport contactSelectors from 'redux/contacts/contactSelectors';\n// RTK Query hooks\nimport { useFetchContactsQuery } from 'services/phoneBook';\n// Create selector\nimport { createSelector } from '@reduxjs/toolkit';\n\nconst useContacts = () => {\n  const filter = useSelector(contactSelectors.getFilter);\n\n  const selectFilteredContacts = useMemo(() => {\n    return createSelector(\n      [response => response.data, (_, filter) => filter],\n      (contacts, filter) => {\n        return (\n          contacts?.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase())\n          ) ?? []\n        );\n      }\n    );\n  }, []);\n\n  return useFetchContactsQuery(undefined, {\n    selectFromResult(result) {\n      return {\n        ...result,\n        filteredContacts: selectFilteredContacts(result, filter),\n      };\n    },\n  });\n};\n\nexport default useContacts;\n","// Contact selectors\nimport contactSelectors from 'redux/contacts/contactSelectors';\n// Styles\nimport s from './Contact.module.css';\n// Contact slice\nimport { changeFilter } from 'redux/contacts/contactSlice';\n// Redux hooks\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst ContactFilter = () => {\n  const filter = useSelector(contactSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.findContactLabel}>\n      Find contacts by name\n      <input\n        className={s.findContactInput}\n        type=\"text\"\n        value={filter}\n        onChange={event => dispatch(changeFilter(event.target.value))}\n      />\n    </label>\n  );\n};\n\nexport default ContactFilter;\n","// Hooks\nimport { useState } from 'react';\n// Toast notify\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst useVisibleItem = () => {\n  const [isVisible, setVisible] = useState(true);\n\n  const handleVisible = event => {\n    if (event.target.tagName === 'BUTTON') {\n      setVisible(!isVisible);\n    }\n    return toast.info(`Contact deleted from your 📱`);\n  };\n\n  return [isVisible, handleVisible];\n};\n\nexport default useVisibleItem;\n","const animateSettings = {\n  visible: {\n    opacity: 1,\n    x: 0,\n    transition: {\n      opacity: 1,\n    },\n  },\n  hidden: {\n    opacity: 0,\n    x: -100,\n  },\n};\n\nexport default animateSettings;\n","// PropTypes\nimport PropTypes from 'prop-types';\n// Hook\nimport useVisibleItem from 'Hooks/useVisibleItem';\n// RTK Query hooks\nimport { useDeleteContactMutation } from 'services/phoneBook';\n// Framer motion\nimport { motion, AnimatePresence } from 'framer-motion';\n// Animation settings\nimport animateSettings from 'animation/animationSettings';\n// Styles\nimport s from './Contact.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n  const [deleteContact] = useDeleteContactMutation();\n  const [isVisible, handleVisible] = useVisibleItem();\n\n  return (\n    <>\n      <AnimatePresence>\n        {isVisible && (\n          <motion.li\n            className={s.contactList__item}\n            variants={animateSettings}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"hidden\"\n            onClick={handleVisible}\n          >\n            <p className={s.contactList__text}>\n              <b>{name}</b>: {number}\n            </p>\n            <button\n              className={s.contactList__button}\n              onClick={() => deleteContact(id)}\n            >\n              Delete\n            </button>\n          </motion.li>\n        )}\n      </AnimatePresence>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","// Hooks\nimport { useMemo } from 'react';\nimport useContacts from 'Hooks/useContacts';\n// Loader\nimport { Loader } from 'components/Loader/Loader';\n// Styles\nimport s from './Contact.module.css';\n// Components\nimport ContactFilter from './ContactFilter';\nimport ContactItem from './ContactItem';\n\nconst ContactList = () => {\n  const { filteredContacts, isLoading, isSuccess } = useContacts();\n\n  const contactsSum = filteredContacts?.length;\n\n  const sortContactsById = useMemo(() => {\n    return [...filteredContacts].reverse();\n  }, [filteredContacts]);\n\n  return (\n    <>\n      <ContactFilter />\n      {!contactsSum ? (\n        <p className={s.contactList__text}>PhoneBook is empty.</p>\n      ) : (\n        <p className={s.contactList__text}>Contacts: {contactsSum}</p>\n      )}\n      {isLoading && <Loader />}\n      {isSuccess && (\n        <ul className={s.contactList}>\n          {sortContactsById.map(({ id, name, number }) => (\n            <ContactItem key={id} id={id} name={name} number={number} />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","// React icons\nimport { BsPhone } from 'react-icons/bs';\nimport { RiContactsLine } from 'react-icons/ri';\n// Styles\nimport s from './Contact.module.css';\n\nexport const PhoneBookTitle = () => {\n  return (\n    <h1 className={s.phoneBookTitle}>\n      PhoneBook\n      <BsPhone />\n    </h1>\n  );\n};\n\nexport const ContactTitle = () => {\n  return (\n    <h2 className={s.contactsTitle}>\n      Contacts <RiContactsLine />\n    </h2>\n  );\n};\n","import { motion } from 'framer-motion';\nimport animationPage from 'animation/animationPage';\n\n// Components\nimport ContactForm from 'components/Contact/ContactForm';\nimport ContactList from 'components/Contact/ContactList';\nimport { PhoneBookTitle, ContactTitle } from 'components/Contact/ContactTitle';\n\n// Styles\nimport s from 'components/Contact/Contact.module.css';\n\nconst ContactsPage = () => {\n  return (\n    <motion.div\n      className={s.phoneBook}\n      animate=\"in\"\n      initial=\"initial\"\n      exit=\"out\"\n      variants={animationPage.pageVariants}\n      transition={animationPage.pageTransition}\n    >\n      <PhoneBookTitle />\n      <ContactForm />\n      <ContactTitle />\n      <ContactList />\n    </motion.div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["animationPage","pageVariants","initial","opacity","x","scale","in","out","pageTransition","type","ease","duration","schema","Yup","shape","name","min","max","required","number","matches","contacts","useFetchContactsQuery","data","useAddContactMutation","addContact","isLoading","formik","useFormik","initialValues","onSubmit","resetForm","alreadyInContacts","toast","console","log","validationSchema","values","useMemo","find","contact","className","s","handleSubmit","onChange","handleChange","value","pattern","title","placeholder","Loader","getFilter","state","filter","useSelector","contactSelectors","selectFilteredContacts","createSelector","response","_","toLowerCase","includes","undefined","selectFromResult","result","filteredContacts","dispatch","useDispatch","event","changeFilter","target","useState","isVisible","setVisible","tagName","visible","transition","hidden","id","useDeleteContactMutation","deleteContact","useVisibleItem","handleVisible","AnimatePresence","motion","variants","animateSettings","animate","exit","onClick","useContacts","isSuccess","contactsSum","length","sortContactsById","reverse","map","PhoneBookTitle","ContactTitle"],"sourceRoot":""}