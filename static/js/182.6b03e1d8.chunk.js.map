{"version":3,"file":"static/js/182.6b03e1d8.chunk.js","mappings":"oSAwBMA,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,YACpDC,SAAUJ,EAAAA,KACPK,IAAI,EAAG,cACPC,IAAI,GAAI,aACRH,SAAS,cAyEd,UAtEkB,WAChB,OAAqBI,EAAAA,EAAAA,MAAdC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbX,MAAO,GACPE,SAAU,IAEZU,SAAS,WAAD,wBAAE,sGAASZ,EAAT,EAASA,MAAOE,EAAhB,EAAgBA,SAAcW,EAA9B,EAA8BA,UAA9B,kBAEiBP,EAAW,CAAEN,MAAAA,EAAOE,SAAAA,IAFrC,gBAEEY,EAFF,EAEEA,KACRP,GAASQ,EAAAA,EAAAA,IAAOD,IAHV,kDAKNE,QAAQC,IAAR,MACAC,EAAAA,GAAAA,MAAY,4BANN,QAQRL,IARQ,0DAAF,qDAAC,GAUTM,iBAAkBtB,IAGpB,EAA4BY,EAAOW,OAA3BpB,EAAR,EAAQA,MAAOE,EAAf,EAAeA,SAQf,OACE,iBAAKmB,UAAWC,EAAAA,EAAAA,YAAhB,WACE,SAAC,MAAD,CAAcD,UAAWC,EAAAA,EAAAA,qBACzB,eAAID,UAAWC,EAAAA,EAAAA,mBAAf,sBACA,kBAAMD,UAAWC,EAAAA,EAAAA,KAAQV,SAAUH,EAAOc,aAA1C,WACE,cAAGF,UAAWC,EAAAA,EAAAA,YAAd,mCACA,kBAAOD,UAAWC,EAAAA,EAAAA,YAAlB,UACE,kBACED,UAAWC,EAAAA,EAAAA,YACXE,KAAK,QACLC,SAAUhB,EAAOiB,aACjBC,MAAOlB,EAAOW,OAAOpB,MACrB4B,KAAK,QACLC,YAAY,aAGhB,kBAAOR,UAAWC,EAAAA,EAAAA,YAAlB,UACE,kBACED,UAAWC,EAAAA,EAAAA,YACXE,KAAK,WACLC,SAAUhB,EAAOiB,aACjBC,MAAOlB,EAAOW,OAAOlB,SACrB0B,KAAK,WACLC,YAAY,gBAGhB,mBAAQR,UAAWC,EAAAA,EAAAA,aAAgBM,KAAK,SAASE,QAhCnC,WAClB,GAAc,KAAV9B,GAA6B,KAAbE,EAClB,OAAOgB,EAAAA,GAAAA,KAAA,kCA8BL,sBAGA,eAAGG,UAAWC,EAAAA,EAAAA,WAAd,mCAEE,SAAC,KAAD,CAASD,UAAWC,EAAAA,EAAAA,WAAcS,GAAG,UAArC,0C,iBC5FV,KAAgB,SAAW,wBAAwB,gBAAkB,+BAA+B,eAAiB,8BAA8B,YAAc,2BAA2B,kBAAoB,iCAAiC,mBAAqB,kCAAkC,KAAO,oBAAoB,YAAc,2BAA2B,WAAa,0BAA0B,YAAc,2BAA2B,aAAe,4BAA4B,WAAa","sources":["pages/SignInPage.jsx","webpack://react-homework-template/./src/pages/Pages.module.css?6bb4"],"sourcesContent":["// RTK Query hooks\nimport { useSignInUserMutation } from 'services/phoneBook';\n\n// Redux\nimport { useDispatch } from 'react-redux';\nimport { signIn } from 'redux/auth/authSlice';\n\n// Styles\nimport s from './Pages.module.css';\n\n// React router dom\nimport { NavLink } from 'react-router-dom';\n\n// Formik\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\n// React icons\nimport { FaUserCircle } from 'react-icons/fa';\n\n// Toast notify\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst schema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n});\n\nconst LoginPage = () => {\n  const [signInUser] = useSignInUserMutation();\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    onSubmit: async ({ email, password }, { resetForm }) => {\n      try {\n        const { data } = await signInUser({ email, password });\n        dispatch(signIn(data));\n      } catch (error) {\n        console.log(error);\n        toast.error('Wrong email or password!');\n      }\n      resetForm();\n    },\n    validationSchema: schema,\n  });\n\n  const { email, password } = formik.values;\n\n  const handleClick = () => {\n    if (email === '' || password === '') {\n      return toast.info(`Form fields must be completed`);\n    }\n  };\n\n  return (\n    <div className={s.formWrapper}>\n      <FaUserCircle className={s.formWrapper__icon} />\n      <h2 className={s.formWrapper__title}>Welcome</h2>\n      <form className={s.form} onSubmit={formik.handleSubmit}>\n        <p className={s.form__title}>Sign in to PhoneBook</p>\n        <label className={s.form__label}>\n          <input\n            className={s.form__input}\n            name=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n            type=\"email\"\n            placeholder=\"Email\"\n          />\n        </label>\n        <label className={s.form__label}>\n          <input\n            className={s.form__input}\n            name=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </label>\n        <button className={s.form__button} type=\"submit\" onClick={handleClick}>\n          Sign in\n        </button>\n        <p className={s.form__text}>\n          New to PhoneBook?&nbsp;\n          <NavLink className={s.form__link} to=\"/signUp\">\n            Create an account\n          </NavLink>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"homePage\":\"Pages_homePage__dBCyh\",\"homePage__title\":\"Pages_homePage__title__mMR7E\",\"homePage__icon\":\"Pages_homePage__icon__BCY6D\",\"formWrapper\":\"Pages_formWrapper__LvpXd\",\"formWrapper__icon\":\"Pages_formWrapper__icon__UxCYG\",\"formWrapper__title\":\"Pages_formWrapper__title__T4Uka\",\"form\":\"Pages_form__Vg5JS\",\"form__title\":\"Pages_form__title__Zm-ad\",\"form__link\":\"Pages_form__link__GC4Ew\",\"form__input\":\"Pages_form__input__Sp0zd\",\"form__button\":\"Pages_form__button__JepvX\",\"form__text\":\"Pages_form__text__2t5WM\"};"],"names":["schema","Yup","shape","email","required","password","min","max","useSignInUserMutation","signInUser","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","resetForm","data","signIn","console","log","toast","validationSchema","values","className","s","handleSubmit","name","onChange","handleChange","value","type","placeholder","onClick","to"],"sourceRoot":""}